/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package votoelectronicoproyecto

import java.awt.event.ActionEvent
import java.awt.event.ActionListener

/**
 *
 * @author Hp
 */
class JfAdministrador : javax.swing.JFrame(), ActionListener {

    /**
     * Creates new form JfAdministrador
     */
    internal var jpResultados = PanelTResultados()
    internal var jpvotantes = PanelRegistroVotantes()
    internal var jpcandidatos = PanelRegistroCandidato()

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private var PanelFondoBotones: javax.swing.JPanel? = null
    private var butCandidato: javax.swing.JButton? = null
    private var butResultados: javax.swing.JButton? = null
    private var butSalir: javax.swing.JButton? = null
    private var butVotante: javax.swing.JButton? = null
    private var jpContenedor: javax.swing.JPanel? = null
    private var jpContenedorAdmin: javax.swing.JPanel? = null
    private var labAdministrar: javax.swing.JLabel? = null

    init {
        initComponents()
        this.setLocationRelativeTo(null)
        jpContenedor!!.add(jpResultados)
        jpResultados.isVisible = true
        jpvotantes.isVisible = false
        jpcandidatos.isVisible = false
        deshabilitarBoton()
        //jpContenedor.repaint();
        butVotante!!.addActionListener(this)
        butCandidato!!.addActionListener(this)
        butResultados!!.addActionListener(this)
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    fun deshabilitarBoton() {
        if (jpResultados.isVisible) {
            butResultados!!.isEnabled = false
            butVotante!!.isEnabled = true
            butCandidato!!.isEnabled = true
        } else if (jpvotantes.isVisible) {
            butResultados!!.isEnabled = true
            butVotante!!.isEnabled = false
            butCandidato!!.isEnabled = true
        } else if (jpcandidatos.isVisible) {
            butResultados!!.isEnabled = true
            butVotante!!.isEnabled = true
            butCandidato!!.isEnabled = false
        }
    }

    private// <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    fun initComponents() {

        jpContenedorAdmin = javax.swing.JPanel()
        jpContenedor = javax.swing.JPanel()
        PanelFondoBotones = javax.swing.JPanel()
        labAdministrar = javax.swing.JLabel()
        butVotante = javax.swing.JButton()
        butCandidato = javax.swing.JButton()
        butResultados = javax.swing.JButton()
        butSalir = javax.swing.JButton()

        defaultCloseOperation = javax.swing.WindowConstants.EXIT_ON_CLOSE
        minimumSize = java.awt.Dimension(800, 490)
        contentPane.layout = null

        jpContenedorAdmin!!.minimumSize = java.awt.Dimension(750, 490)
        jpContenedorAdmin!!.nextFocusableComponent = this

        jpContenedor!!.border = javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1)
        jpContenedor!!.minimumSize = java.awt.Dimension(543, 470)
        jpContenedor!!.layout = java.awt.BorderLayout()

        PanelFondoBotones!!.minimumSize = java.awt.Dimension(183, 490)

        labAdministrar!!.font = java.awt.Font("Times New Roman", 1, 24) // NOI18N
        labAdministrar!!.text = "ADMINISTRAR"
        PanelFondoBotones!!.add(labAdministrar)

        butVotante!!.font = java.awt.Font("Times New Roman", 1, 18) // NOI18N
        butVotante!!.text = "Votante"
        butVotante!!.addActionListener { evt -> butVotanteActionPerformed(evt) }
        PanelFondoBotones!!.add(butVotante)

        butCandidato!!.font = java.awt.Font("Times New Roman", 1, 18) // NOI18N
        butCandidato!!.text = "Candidato"
        butCandidato!!.addActionListener { evt -> butCandidatoActionPerformed(evt) }
        PanelFondoBotones!!.add(butCandidato)

        butResultados!!.font = java.awt.Font("Times New Roman", 1, 18) // NOI18N
        butResultados!!.text = "Resultados"
        butResultados!!.addActionListener { evt -> butResultadosActionPerformed(evt) }
        PanelFondoBotones!!.add(butResultados)

        butSalir!!.font = java.awt.Font("Times New Roman", 1, 18) // NOI18N
        butSalir!!.text = "Salir"
        butSalir!!.addActionListener { evt -> butSalirActionPerformed(evt) }
        PanelFondoBotones!!.add(butSalir)

        val jpContenedorAdminLayout = javax.swing.GroupLayout(jpContenedorAdmin!!)
        jpContenedorAdmin!!.layout = jpContenedorAdminLayout
        jpContenedorAdminLayout.setHorizontalGroup(
                jpContenedorAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpContenedorAdminLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jpContenedor!!, javax.swing.GroupLayout.DEFAULT_SIZE, 543, java.lang.Short.MAX_VALUE.toInt())
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(PanelFondoBotones!!, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(358, 358, 358))
        )
        jpContenedorAdminLayout.setVerticalGroup(
                jpContenedorAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jpContenedorAdminLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jpContenedorAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(PanelFondoBotones!!, javax.swing.GroupLayout.PREFERRED_SIZE, 464, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jpContenedor!!, javax.swing.GroupLayout.PREFERRED_SIZE, 466, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(18, java.lang.Short.MAX_VALUE.toInt()))
        )

        jpContenedor!!.accessibleContext.accessibleParent = null

        contentPane.add(jpContenedorAdmin)
        jpContenedorAdmin!!.setBounds(0, 0, 750, 480)

        pack()
    }// </editor-fold>//GEN-END:initComponents

    private fun butVotanteActionPerformed(evt: java.awt.event.ActionEvent) {//GEN-FIRST:event_butVotanteActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_butVotanteActionPerformed

    private fun butCandidatoActionPerformed(evt: java.awt.event.ActionEvent) {//GEN-FIRST:event_butCandidatoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_butCandidatoActionPerformed

    private fun butResultadosActionPerformed(evt: java.awt.event.ActionEvent) {//GEN-FIRST:event_butResultadosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_butResultadosActionPerformed

    private fun butSalirActionPerformed(evt: java.awt.event.ActionEvent) {//GEN-FIRST:event_butSalirActionPerformed
        // TODO add your handling code here:
        System.exit(0)
    }//GEN-LAST:event_butSalirActionPerformed
    // End of variables declaration//GEN-END:variables

    override fun actionPerformed(ae: ActionEvent) {
        val evt = ae.source

        if (evt == butVotante) {
            jpvotantes.isVisible = true
            jpResultados.isVisible = false
            jpcandidatos.isVisible = false

            jpContenedor!!.add(jpvotantes)
            jpContenedor!!.repaint()

            deshabilitarBoton()
        } else if (evt == butCandidato) {
            jpvotantes.isVisible = false
            jpResultados.isVisible = false
            jpcandidatos.isVisible = true

            jpContenedor!!.add(jpcandidatos)
            jpContenedor!!.repaint()

            deshabilitarBoton()
        } else if (evt == butResultados) {
            jpvotantes.isVisible = false
            jpResultados.isVisible = true
            jpcandidatos.isVisible = false

            jpContenedor!!.add(jpResultados)
            jpContenedor!!.repaint()

            deshabilitarBoton()
        }
    }

    companion object {

        /**
         * @param args the command line arguments
         */
        @JvmStatic
        fun main(args: Array<String>) {
            /* Set the Nimbus look and feel */
            //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
            /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
            try {
                for (info in javax.swing.UIManager.getInstalledLookAndFeels()) {
                    if ("Nimbus" == info.name) {
                        javax.swing.UIManager.setLookAndFeel(info.className)
                        break
                    }
                }
            } catch (ex: ClassNotFoundException) {
                java.util.logging.Logger.getLogger(JfAdministrador::class.java!!.getName()).log(java.util.logging.Level.SEVERE, null, ex)
            } catch (ex: InstantiationException) {
                java.util.logging.Logger.getLogger(JfAdministrador::class.java!!.getName()).log(java.util.logging.Level.SEVERE, null, ex)
            } catch (ex: IllegalAccessException) {
                java.util.logging.Logger.getLogger(JfAdministrador::class.java!!.getName()).log(java.util.logging.Level.SEVERE, null, ex)
            } catch (ex: javax.swing.UnsupportedLookAndFeelException) {
                java.util.logging.Logger.getLogger(JfAdministrador::class.java!!.getName()).log(java.util.logging.Level.SEVERE, null, ex)
            }

            //</editor-fold>

            /* Create and display the form */
            java.awt.EventQueue.invokeLater { JfAdministrador().isVisible = true }
        }
    }
}
