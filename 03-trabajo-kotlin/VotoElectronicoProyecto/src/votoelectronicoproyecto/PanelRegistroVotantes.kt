/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package votoelectronicoproyecto


import java.awt.event.MouseAdapter
import java.awt.event.MouseEvent
import java.awt.event.MouseListener
import javax.swing.JOptionPane
import modelo.SqlVotante
import modelo.Votante

/**
 *
 * @author Hp
 */
class PanelRegistroVotantes : javax.swing.JPanel(), MouseListener {

    /**
     * Creates new form PanelRegistroVotantes
     */

    internal var mod = Votante()


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private var butBorrarVotante: javax.swing.JButton? = null
    private var butBuscarVotante: javax.swing.JButton? = null
    private var butInfo: javax.swing.JButton? = null
    private var butLimpiarDatosVotante: javax.swing.JButton? = null
    private var butRegistrarVotante: javax.swing.JButton? = null
    private var cboTipoId: javax.swing.JComboBox<String>? = null
    private var jLabel1: javax.swing.JLabel? = null
    private var labApellidoVotante: javax.swing.JLabel? = null
    private var labCarreraVotante: javax.swing.JLabel? = null
    private var labDatosVotante: javax.swing.JLabel? = null
    private var labIdVotante: javax.swing.JLabel? = null
    private var labNivelVotante: javax.swing.JLabel? = null
    private var labNombreVotante: javax.swing.JLabel? = null
    private var labTipoIdVotante: javax.swing.JLabel? = null
    private var txtApellidoVotante: javax.swing.JTextField? = null
    private var txtCarreraVotante: javax.swing.JTextField? = null
    private var txtIdVotante: javax.swing.JTextField? = null
    private var txtNivelVotante: javax.swing.JTextField? = null
    private var txtNombreVotante: javax.swing.JTextField? = null

    init {
        initComponents()
        butInfo!!.addMouseListener(object : MouseAdapter() {
            @Override
            fun mouseEntered(e: MouseEvent) {
                JOptionPane.showMessageDialog(null, "Por favor ingrese solo el id del votante para buscar y para eliminar")
            }

        })
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private// <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    fun initComponents() {

        labDatosVotante = javax.swing.JLabel()
        labNombreVotante = javax.swing.JLabel()
        labApellidoVotante = javax.swing.JLabel()
        labIdVotante = javax.swing.JLabel()
        labTipoIdVotante = javax.swing.JLabel()
        labNivelVotante = javax.swing.JLabel()
        txtNombreVotante = javax.swing.JTextField()
        txtApellidoVotante = javax.swing.JTextField()
        txtIdVotante = javax.swing.JTextField()
        txtNivelVotante = javax.swing.JTextField()
        butBorrarVotante = javax.swing.JButton()
        butLimpiarDatosVotante = javax.swing.JButton()
        butBuscarVotante = javax.swing.JButton()
        butRegistrarVotante = javax.swing.JButton()
        labCarreraVotante = javax.swing.JLabel()
        txtCarreraVotante = javax.swing.JTextField()
        cboTipoId = javax.swing.JComboBox()
        butInfo = javax.swing.JButton()
        jLabel1 = javax.swing.JLabel()

        setMinimumSize(java.awt.Dimension(650, 651))
        setLayout(null)

        labDatosVotante!!.setFont(java.awt.Font("Times New Roman", 1, 18)) // NOI18N
        labDatosVotante!!.setText("DATOS DEL VOTANTE")
        add(labDatosVotante)
        labDatosVotante!!.setBounds(170, 30, 193, 22)

        labNombreVotante!!.setFont(java.awt.Font("Times New Roman", 1, 18)) // NOI18N
        labNombreVotante!!.setText("Nombre:")
        add(labNombreVotante)
        labNombreVotante!!.setBounds(52, 98, 68, 22)

        labApellidoVotante!!.setFont(java.awt.Font("Times New Roman", 1, 18)) // NOI18N
        labApellidoVotante!!.setText("Apellido:")
        add(labApellidoVotante)
        labApellidoVotante!!.setBounds(52, 148, 71, 22)

        labIdVotante!!.setFont(java.awt.Font("Times New Roman", 1, 18)) // NOI18N
        labIdVotante!!.setText("Id:")
        add(labIdVotante)
        labIdVotante!!.setBounds(50, 190, 22, 22)

        labTipoIdVotante!!.setFont(java.awt.Font("Times New Roman", 1, 18)) // NOI18N
        labTipoIdVotante!!.setText("Tipo Id:")
        add(labTipoIdVotante)
        labTipoIdVotante!!.setBounds(50, 230, 63, 22)

        labNivelVotante!!.setFont(java.awt.Font("Times New Roman", 1, 18)) // NOI18N
        labNivelVotante!!.setText("Nivel:")
        add(labNivelVotante)
        labNivelVotante!!.setBounds(52, 329, 45, 22)
        add(txtNombreVotante)
        txtNombreVotante!!.setBounds(138, 101, 101, 24)
        add(txtApellidoVotante)
        txtApellidoVotante!!.setBounds(141, 151, 98, 24)
        add(txtIdVotante)
        txtIdVotante!!.setBounds(140, 190, 98, 24)
        add(txtNivelVotante)
        txtNivelVotante!!.setBounds(140, 330, 98, 30)

        butBorrarVotante!!.setFont(java.awt.Font("Times New Roman", 1, 14)) // NOI18N
        butBorrarVotante!!.setText("Borrar")
        butBorrarVotante!!.addActionListener(object : java.awt.event.ActionListener() {
            fun actionPerformed(evt: java.awt.event.ActionEvent) {
                butBorrarVotanteActionPerformed(evt)
            }
        })
        add(butBorrarVotante)
        butBorrarVotante!!.setBounds(377, 314, 91, 33)

        butLimpiarDatosVotante!!.setFont(java.awt.Font("Times New Roman", 1, 14)) // NOI18N
        butLimpiarDatosVotante!!.setText("Limpiar")
        butLimpiarDatosVotante!!.addActionListener(object : java.awt.event.ActionListener() {
            fun actionPerformed(evt: java.awt.event.ActionEvent) {
                butLimpiarDatosVotanteActionPerformed(evt)
            }
        })
        add(butLimpiarDatosVotante)
        butLimpiarDatosVotante!!.setBounds(380, 240, 91, 33)

        butBuscarVotante!!.setFont(java.awt.Font("Times New Roman", 1, 14)) // NOI18N
        butBuscarVotante!!.setText("Buscar")
        butBuscarVotante!!.addActionListener(object : java.awt.event.ActionListener() {
            fun actionPerformed(evt: java.awt.event.ActionEvent) {
                butBuscarVotanteActionPerformed(evt)
            }
        })
        add(butBuscarVotante)
        butBuscarVotante!!.setBounds(380, 180, 91, 33)

        butRegistrarVotante!!.setFont(java.awt.Font("Times New Roman", 1, 14)) // NOI18N
        butRegistrarVotante!!.setText("Registrar")
        butRegistrarVotante!!.addActionListener(object : java.awt.event.ActionListener() {
            fun actionPerformed(evt: java.awt.event.ActionEvent) {
                butRegistrarVotanteActionPerformed(evt)
            }
        })
        add(butRegistrarVotante)
        butRegistrarVotante!!.setBounds(377, 110, 88, 33)

        labCarreraVotante!!.setFont(java.awt.Font("Times New Roman", 1, 18)) // NOI18N
        labCarreraVotante!!.setText("Carrera:")
        add(labCarreraVotante)
        labCarreraVotante!!.setBounds(50, 280, 70, 30)
        add(txtCarreraVotante)
        txtCarreraVotante!!.setBounds(140, 280, 100, 30)

        cboTipoId!!.setModel(javax.swing.DefaultComboBoxModel(arrayOf("cedula", "pasaporte")))
        cboTipoId!!.addActionListener(object : java.awt.event.ActionListener() {
            fun actionPerformed(evt: java.awt.event.ActionEvent) {
                cboTipoIdActionPerformed(evt)
            }
        })
        add(cboTipoId)
        cboTipoId!!.setBounds(140, 230, 100, 26)

        butInfo!!.setIcon(javax.swing.ImageIcon(getClass().getResource("/Logos/informacion.png"))) // NOI18N
        butInfo!!.addActionListener(object : java.awt.event.ActionListener() {
            fun actionPerformed(evt: java.awt.event.ActionEvent) {
                butInfoActionPerformed(evt)
            }
        })
        add(butInfo)
        butInfo!!.setBounds(450, 390, 30, 32)

        jLabel1!!.setIcon(javax.swing.ImageIcon(getClass().getResource("/Logos/FondoSistema.jpg"))) // NOI18N
        jLabel1!!.setText("jLabel1")
        add(jLabel1)
        jLabel1!!.setBounds(0, 0, 500, 430)

        getAccessibleContext().setAccessibleName("")
    }// </editor-fold>//GEN-END:initComponents

    private fun butRegistrarVotanteActionPerformed(evt: java.awt.event.ActionEvent) {//GEN-FIRST:event_butRegistrarVotanteActionPerformed
        // TODO add your handling code here:
        val modSql = SqlVotante()


        if (txtNombreVotante!!.getText().equals("") || txtApellidoVotante!!.getText().equals("") || txtIdVotante!!.getText().equals("") || cboTipoId!!.getSelectedItem().toString().equals("") || txtCarreraVotante!!.getText().equals("") || txtNivelVotante!!.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Hay campos vacios, debe llenar todos los datos")
        } else {

            mod.setNombre(txtNombreVotante!!.getText())
            mod.setApellido(txtApellidoVotante!!.getText())
            mod.setIdentificacion(Integer.parseInt(txtIdVotante!!.getText()))
            if (cboTipoId!!.getSelectedItem().equals("cedula")) {
                val Tipoid = "ci"
                mod.setTipo_id(Tipoid)
            } else if (cboTipoId!!.getSelectedItem().equals("pasaporte")) {
                val Tipoid = "ps"
                mod.setTipo_id(Tipoid)
            }

            mod.setCarrera(txtCarreraVotante!!.getText())
            mod.setNivel(Integer.parseInt(txtNivelVotante!!.getText()))

            if (modSql.registrar(mod)) {
                JOptionPane.showMessageDialog(null, "Registro Guardado")
                limpiar()
            } else {
                JOptionPane.showMessageDialog(null, "Error al Guardar")
                limpiar()
            }
        }
    }//GEN-LAST:event_butRegistrarVotanteActionPerformed

    private fun limpiar() {
        txtNombreVotante!!.setText("")
        txtApellidoVotante!!.setText("")
        txtIdVotante!!.setText("")
        txtCarreraVotante!!.setText("")
        txtNivelVotante!!.setText("")
    }

    private fun cboTipoIdActionPerformed(evt: java.awt.event.ActionEvent) {//GEN-FIRST:event_cboTipoIdActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_cboTipoIdActionPerformed

    private fun butLimpiarDatosVotanteActionPerformed(evt: java.awt.event.ActionEvent) {//GEN-FIRST:event_butLimpiarDatosVotanteActionPerformed
        // TODO add your handling code here:
        limpiar()
    }//GEN-LAST:event_butLimpiarDatosVotanteActionPerformed

    private fun butBorrarVotanteActionPerformed(evt: java.awt.event.ActionEvent) {//GEN-FIRST:event_butBorrarVotanteActionPerformed
        // TODO add your handling code here:
        val modSql = SqlVotante()

        if (txtIdVotante!!.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Debe ingresar un id")
        } else {
            mod.setIdentificacion(Integer.parseInt(txtIdVotante!!.getText()))
            if (modSql.eliminar(mod)) {
                JOptionPane.showMessageDialog(null, "Registro Borrado")
                limpiar()
            } else {
                JOptionPane.showMessageDialog(null, "Error al Borrar")
                limpiar()
            }
        }
    }//GEN-LAST:event_butBorrarVotanteActionPerformed

    private fun butInfoActionPerformed(evt: java.awt.event.ActionEvent) {//GEN-FIRST:event_butInfoActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_butInfoActionPerformed

    private fun butBuscarVotanteActionPerformed(evt: java.awt.event.ActionEvent) {//GEN-FIRST:event_butBuscarVotanteActionPerformed
        // TODO add your handling code here:
        val modSql = SqlVotante()
        if (txtIdVotante!!.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Debe ingresar un id")
        } else {
            mod.setIdentificacion(Integer.parseInt(txtIdVotante!!.getText()))
            modSql.buscar(mod)
            txtNombreVotante!!.setText(mod.getNombre())
            txtApellidoVotante!!.setText(mod.getApellido())
            txtIdVotante!!.setText(String.valueOf(mod.getIdentificacion()))
            if (mod.getTipo_id().equals("ci")) {
                cboTipoId!!.setSelectedItem("cedula")
            } else if (mod.getTipo_id().equals("ps")) {
                cboTipoId!!.setSelectedItem("pasaporte")
            }
            txtCarreraVotante!!.setText(mod.getCarrera())
            txtNivelVotante!!.setText(String.valueOf(mod.getNivel()))
        }

    }//GEN-LAST:event_butBuscarVotanteActionPerformed
    // End of variables declaration//GEN-END:variables

    @Override
    fun mouseClicked(e: MouseEvent) {
        throw UnsupportedOperationException("Not supported yet.") //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    fun mousePressed(e: MouseEvent) {
        throw UnsupportedOperationException("Not supported yet.") //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    fun mouseReleased(e: MouseEvent) {
        throw UnsupportedOperationException("Not supported yet.") //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    fun mouseEntered(e: MouseEvent) {

    }

    @Override
    fun mouseExited(e: MouseEvent) {
        throw UnsupportedOperationException("Not supported yet.") //To change body of generated methods, choose Tools | Templates.
    }


}
